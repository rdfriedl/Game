<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>toggle_wall_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>collision_par</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>power options</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>power_inst_init</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(power_inst_get()){
    phy_position_x = xstart;
    phy_position_y = ystart;
    image_index = 0;
}
else{
    phy_position_x = room_width;
    phy_position_y = room_height;
    image_index = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sliced render
//top right corner
var w = sprite_get_width(sprite_index);
var h = sprite_get_height(sprite_index);
var w2 = w/3;
var h2 = h/3;

//corners
draw_sprite_part_ext(sprite_index,image_index,0,0,w2,h2,xstart,ystart,1,1,image_blend,image_alpha); //top left
draw_sprite_part_ext(sprite_index,image_index,w - w2,0,w2,h2,(xstart+sprite_width) - w2,ystart,1,1,image_blend,image_alpha); //top right
draw_sprite_part_ext(sprite_index,image_index,0,h - h2,w2,h2,xstart,(ystart+sprite_height) - h2,1,1,image_blend,image_alpha); //bottom left
draw_sprite_part_ext(sprite_index,image_index,w - w2,h - h2,w2,h2,(xstart+sprite_width) - w2,(ystart+sprite_height) - h2,1,1,image_blend,image_alpha); //bottom right

//sides
draw_sprite_part_ext(sprite_index,image_index,0,h2,w2,h2,xstart,ystart+h2,1,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha); //left
draw_sprite_part_ext(sprite_index,image_index,w-w2,h2,w2,h2,(xstart+sprite_width)-w2,ystart+h2,1,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha); //right
draw_sprite_part_ext(sprite_index,image_index,w2,0,w2,h2,xstart+w2,ystart,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,1,image_blend,image_alpha); //top
draw_sprite_part_ext(sprite_index,image_index,w2,h-h2,w2,h2,xstart+w2,(ystart+sprite_height)-h2,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,1,image_blend,image_alpha); //bottom

//center
draw_sprite_part_ext(sprite_index,image_index,w2,h2,w2,h2,xstart+w2,ystart+h2,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw to scan
if(global.scanning &amp;&amp; global.draw_scan){
    surface_set_target(global.scan_surface_draw);
    
    //top right corner
    var w = sprite_get_width(sprite_index);
    var h = sprite_get_height(sprite_index);
    var w2 = w/3;
    var h2 = h/3;
    
    //corners
    draw_sprite_part_ext(sprite_index,image_index,0,0,w2,h2,xstart,ystart,1,1,image_blend,image_alpha); //top left
    draw_sprite_part_ext(sprite_index,image_index,w - w2,0,w2,h2,(xstart+sprite_width) - w2,ystart,1,1,image_blend,image_alpha); //top right
    draw_sprite_part_ext(sprite_index,image_index,0,h - h2,w2,h2,xstart,(ystart+sprite_height) - h2,1,1,image_blend,image_alpha); //bottom left
    draw_sprite_part_ext(sprite_index,image_index,w - w2,h - h2,w2,h2,(xstart+sprite_width) - w2,(ystart+sprite_height) - h2,1,1,image_blend,image_alpha); //bottom right
    
    //sides
    draw_sprite_part_ext(sprite_index,image_index,0,h2,w2,h2,xstart,ystart+h2,1,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha); //left
    draw_sprite_part_ext(sprite_index,image_index,w-w2,h2,w2,h2,(xstart+sprite_width)-w2,ystart+h2,1,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha); //right
    draw_sprite_part_ext(sprite_index,image_index,w2,0,w2,h2,xstart+w2,ystart,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,1,image_blend,image_alpha); //top
    draw_sprite_part_ext(sprite_index,image_index,w2,h-h2,w2,h2,xstart+w2,(ystart+sprite_height)-h2,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,1,image_blend,image_alpha); //bottom
    
    //center
    draw_sprite_part_ext(sprite_index,image_index,w2,h2,w2,h2,xstart+w2,ystart+h2,(((xstart+sprite_width)-w2)-(xstart+w2))/w2,(((ystart+sprite_height)-h2)-(ystart+h2))/h2,image_blend,image_alpha)
    
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.5</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,0</point>
    <point>16,16</point>
    <point>0,16</point>
  </PhysicsShapePoints>
</object>
