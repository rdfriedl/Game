<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>self.surf = surface_create(1024, 1024);
surface_set_target(surf);
draw_clear_alpha(c_black, 0);
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//get all the lights
var _lights = 0;
for(var i = 0; i &lt; instance_number(light); i+=1){
    _lights[i] = (instance_find(light,i))
}

//get blocks
var _blocks = 0;
for(var i = 0; i &lt; instance_number(wall_par); i+=1){
    _blocks[i] = (instance_find(wall_par,i))
}

//remove inst(s) that are not in the view
//var _blocksInView = 0;
//for(var i = 0; i &lt; array_length_1d(_blocks); i+=1){
//    var inst = _blocks[i];
//    if(inst.bbox_left &gt; view_xview[0]+view_wview[0] || inst.bbox_right &lt; view_xview[0] || inst.bbox_top &gt; view_xview[0]+view_hview[0] || inst.bbox_bottom &lt; view_yview[0]){
//        //dont add it
//    }
//    else{
//        //add it
//        _blocksInView[array_length_1d(_blocksInView)+1] = inst;
//    }
//}

for(var l = 0; l &lt; array_length_1d(_lights); l+=1){
    var raysToX = 0;
    var raysToY = 0;
    var inst = _lights[l];
    //case ray
    for(var b; b &lt; array_length_1d(_blocks); b+=1){
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
