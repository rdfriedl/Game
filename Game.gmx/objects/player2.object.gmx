<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite13</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init
light = instance_create(x,y,obj_light);
light.cast_fog = true;

phy_fixed_rotation = true;
airMoveSpeed = 100;
groundMoveSpeed = 150;
jump = 100;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>light.x = x;
light.y = y;

phy_linear_velocity_x = phy_linear_velocity_x / 10;

if(collision_point(x,bbox_bottom+2,wall_par,false,true)){
    if(keyboard_check(vk_right) || keyboard_check(ord('D'))){
        phy_linear_velocity_x = airMoveSpeed;
    }
    else if(keyboard_check(vk_left) || keyboard_check(ord('A'))){
        phy_linear_velocity_x = -airMoveSpeed;
    }
    
    if(keyboard_check(vk_up) || keyboard_check(ord('W'))){
        physics_apply_local_impulse(0,0,0,-jump);
    }
}
else{
    if(keyboard_check(vk_right) || keyboard_check(ord('D'))){
        phy_linear_velocity_x = groundMoveSpeed;
    }
    else if(keyboard_check(vk_left) || keyboard_check(ord('A'))){
        phy_linear_velocity_x = -groundMoveSpeed;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="wall_par">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>collision</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>-1</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,0</point>
    <point>24,0</point>
    <point>24,32</point>
    <point>8,32</point>
  </PhysicsShapePoints>
</object>
